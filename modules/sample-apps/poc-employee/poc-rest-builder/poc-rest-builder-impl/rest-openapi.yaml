components:
  responses:
    # Descriptions of common responses
    BadRequestException:
      description: Request body not meet require
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
        application/xml:
          schema:
            $ref: "#/components/schemas/Error"
    NotAuthorizedException:
      description: Authentication failure
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
        application/xml:
          schema:
            $ref: "#/components/schemas/Error"
    ForbiddenException:
      description: Not permitted to access
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
        application/xml:
          schema:
            $ref: "#/components/schemas/Error"
    NotFoundException:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
        application/xml:
          schema:
            $ref: "#/components/schemas/Error"
    NotAllowedException:
      description: HTTP method not supported
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
        application/xml:
          schema:
            $ref: "#/components/schemas/Error"
    NotAcceptableException:
      description: Client media type requested not supported
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
        application/xml:
          schema:
            $ref: "#/components/schemas/Error"
    NotSupportedException:
      description: Client posted media type not supported
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
        application/xml:
          schema:
            $ref: "#/components/schemas/Error"
    InternalServerErrorException:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
        application/xml:
          schema:
            $ref: "#/components/schemas/Error"
    ServiceUnavailableException:
      description: Server is temporarily unavailable or busy
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
        application/xml:
          schema:
            $ref: "#/components/schemas/Error"
  schemas:
    Employee:
      description: A very simple employee
      properties:
        id:
          description: The employee ID.
          type: integer
          format: int64
        name:
          description: The employee Name.
          type: string
        birthDay:
          description: The employee birth day.
          type: string
          format: date
          pattern: "YYYY-MM-DD"
        gender:
          description: The employee gender
          type: integer
        address:
          description: The employee address
          type: string
        hasAccount:
          description: The employee has account ?
          type: boolean
      type: object
    Error:
      type: object
      properties:
        status:
          format: int64
          readOnly: true
          type: integer
          example: 401
        code:
          type: string
          example: DOGOO-100
        message:
          type: string
        developerMessage:
          type: string
      required:
        - code
        - message
info:
  description: "DemoRestBuilder REST API"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
  title: "DemoRestBuilder"
  version: v1.0
openapi: 3.0.1
paths:
  "/employees/{employeeId}":
    get:
      operationId: getEmployee
      summary: Get employee by ID
      parameters:
        - in: path
          name: employeeId
          description: Employee ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Employee"
            application/xml:
              schema:
                $ref: "#/components/schemas/Employee"
          description: ""
        400:
          $ref: "#/components/responses/BadRequestException"
        401:
          $ref: "#/components/responses/NotAuthorizedException"
        403:
          $ref: "#/components/responses/ForbiddenException"
        404:
          $ref: "#/components/responses/NotFoundException"
        405:
          $ref: "#/components/responses/NotAllowedException"
        406:
          $ref: "#/components/responses/NotAcceptableException"
        415:
          $ref: "#/components/responses/NotSupportedException"
        500:
          $ref: "#/components/responses/InternalServerErrorException"
        503:
          $ref: "#/components/responses/ServiceUnavailableException"
      tags: [ "Employee" ]
    delete:
      operationId: deleteEmployee
      summary: Delete employee by ID
      parameters:
        - in: path
          name: employeeId
          required: true
          schema:
            type: integer
            format: int64
      responses:
        204:
          content:
            application/json: { }
            application/xml: { }
          description: ""
        400:
          $ref: "#/components/responses/BadRequestException"
        401:
          $ref: "#/components/responses/NotAuthorizedException"
        403:
          $ref: "#/components/responses/ForbiddenException"
        404:
          $ref: "#/components/responses/NotFoundException"
        405:
          $ref: "#/components/responses/NotAllowedException"
        406:
          $ref: "#/components/responses/NotAcceptableException"
        415:
          $ref: "#/components/responses/NotSupportedException"
        500:
          $ref: "#/components/responses/InternalServerErrorException"
        503:
          $ref: "#/components/responses/ServiceUnavailableException"
      tags: [ "Employee" ]
    put:
      operationId: putEmployee
      summary: Update employee by ID
      parameters:
        - in: path
          name: employeeId
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Employee"
          application/xml:
            schema:
              $ref: "#/components/schemas/Employee"
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Employee"
            application/xml:
              schema:
                $ref: "#/components/schemas/Employee"
          description: ""
        400:
          $ref: "#/components/responses/BadRequestException"
        401:
          $ref: "#/components/responses/NotAuthorizedException"
        403:
          $ref: "#/components/responses/ForbiddenException"
        404:
          $ref: "#/components/responses/NotFoundException"
        405:
          $ref: "#/components/responses/NotAllowedException"
        406:
          $ref: "#/components/responses/NotAcceptableException"
        415:
          $ref: "#/components/responses/NotSupportedException"
        500:
          $ref: "#/components/responses/InternalServerErrorException"
        503:
          $ref: "#/components/responses/ServiceUnavailableException"
      tags: [ "Employee" ]
  "/employees":
    get:
      operationId: getEmployees
      summary: Get list employee
      description: Retrieves the pets. Results can be paginated, filtered, searched, and sorted.
      tags: [ "Employee" ]
      parameters:
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: search
          schema:
            type: string
        - in: query
          name: sort
          schema:
            type: string
      responses:
        200:
          description: A paged array of pets
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Employee"
                type: array
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/Employee"
                type: array
        400:
          $ref: "#/components/responses/BadRequestException"
        401:
          $ref: "#/components/responses/NotAuthorizedException"
        403:
          $ref: "#/components/responses/ForbiddenException"
        404:
          $ref: "#/components/responses/NotFoundException"
        405:
          $ref: "#/components/responses/NotAllowedException"
        406:
          $ref: "#/components/responses/NotAcceptableException"
        415:
          $ref: "#/components/responses/NotSupportedException"
        500:
          $ref: "#/components/responses/InternalServerErrorException"
        503:
          $ref: "#/components/responses/ServiceUnavailableException"
    post:
      operationId: addEmployee
      summary: Add new Employee

      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Employee"
          application/xml:
            schema:
              $ref: "#/components/schemas/Employee"
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Employee"
            application/xml:
              schema:
                $ref: "#/components/schemas/Employee"
          description: ""
        400:
          $ref: "#/components/responses/BadRequestException"
        401:
          $ref: "#/components/responses/NotAuthorizedException"
        403:
          $ref: "#/components/responses/ForbiddenException"
        404:
          $ref: "#/components/responses/NotFoundException"
        405:
          $ref: "#/components/responses/NotAllowedException"
        406:
          $ref: "#/components/responses/NotAcceptableException"
        415:
          $ref: "#/components/responses/NotSupportedException"
        500:
          $ref: "#/components/responses/InternalServerErrorException"
        503:
          $ref: "#/components/responses/ServiceUnavailableException"
      tags: [ "Employee" ]
