components:
  schemas:
    Employee:
      description: A very simple employee
      properties:
        id:
          description: The employee ID.
          type: string
        name:
          description: The employee Name.
          type: string
        birthDay:
          description: The employee birth day.
          type: string
          format: date
          pattern: "YYYY-MM-DD"
        gender:
          description: The employee gender
          type: integer
        address:
          description: The employee address
          type: string
        hasAccount:
          description: The employee has account ?
          type: boolean
      type: object
info:
  description: "DemoRestBuilder REST API"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
  title: "DemoRestBuilder"
  version: v1.0
openapi: 3.0.1
paths:
  "/employees/{employeeId}":
    get:
      operationId: getEmployee
      summary: Get employee by ID
      parameters:
        - in: path
          name: employeeId
          description: Employee ID
          required: true
          schema:
            type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Employee"
            application/xml:
              schema:
                $ref: "#/components/schemas/Employee"
          description: ""
      tags: [ "Employee" ]
    delete:
      operationId: deleteEmployee
      summary: Delete employee by ID
      parameters:
        - in: path
          name: employeeId
          required: true
          schema:
            type: string
      responses:
        204:
          content:
            application/json: { }
            application/xml: { }
          description: ""
      tags: [ "Employee" ]
    put:
      operationId: putEmployee
      summary: Update employee by ID
      parameters:
        - in: path
          name: employeeId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Employee"
          application/xml:
            schema:
              $ref: "#/components/schemas/Employee"
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Employee"
            application/xml:
              schema:
                $ref: "#/components/schemas/Employee"
          description: ""
      tags: [ "Employee" ]
  "/employees":
    get:
      operationId: getEmployees
      summary: Get list employee
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Employee"
                type: array
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/Employee"
                type: array
          description: ""
      tags: [ "Employee" ]
    post:
      operationId: addEmployee
      summary: Add new Employee
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Employee"
          application/xml:
            schema:
              $ref: "#/components/schemas/Employee"
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Employee"
            application/xml:
              schema:
                $ref: "#/components/schemas/Employee"
          description: ""
      tags: [ "Employee" ]
